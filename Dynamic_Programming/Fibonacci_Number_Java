// _________________Recursion___________________
// class Solution {
//     public int fib(int n) {
//         if(n==0 || n==1)
//         {
//             return n;
//         }
//         else
//         {
//             return fib(n-1)+fib(n-2);
//         }
//     }
// }
// ________________Memoization_______________
// class Solution {
//     public int fib(int n) {
//         int[] memo = new int[n + 1];
//         for (int i = 0; i <= n; i++) 
//         {
//             memo[i] = -1;
//         }
//         return f(n, memo);
//     }

//     private int f(int n, int[] memo) {
//         if (n == 0 || n == 1) 
//         {
//             return n;
//         }
//         else if (memo[n] != -1) // memoization me check kr rhe h ki vo value abhi bhi -1 h kya...agr nhi to uski value ko use kr lo, dubara nikalne ki jrurt nhi h
//         {
//             return memo[n];
//         }
//         return memo[n] = f(n - 1, memo) + f(n - 2, memo);
//     }
// }
// _____________Dynamic Programming____________
class Solution {
    public int fib(int n) {
        if (n == 0 || n==1)
        {
            return n;
        }

        int dp[] = new int[n + 1];
        dp[0] = 0;
        dp[1] = 1;
        for (int i = 2; i <= n; i++) 
        {
            dp[i] = dp[i - 1] + dp[i - 2];
        }
        return dp[n];
    }
}
