class Solution {
    Node copyList(Node head) {
        Node temp=head;
        while(temp!=null)
        {
            Node copyNode=new Node(temp.data);
            copyNode.next=temp.next;
            temp.next=copyNode;
            temp=temp.next.next;
        }

        // connecting random pointers
        temp=head;
        while(temp!=null)
        {
            Node copyNode=temp.next;
            if(temp.random!=null) 
            {
                copyNode.random=temp.random.next;
            }
            temp=temp.next.next;
        }

        // connecting next pointers
        Node dummy=new Node(-1);
        Node curr=dummy;
        temp=head;
        while(temp!=null)
        {
            curr.next=temp.next;
            temp.next=temp.next.next;
            curr=curr.next;
            temp=temp.next;
        }
        return dummy.next;
    }
}
// __________HashMap Approach__________
// class Solution {
//     Node copyList(Node head) {
//         if (head == null) 
//         {
//             return null;
//         }

//         Node temp = head;
//         HashMap<Node, Node> map = new HashMap<>();

//         while (temp != null) 
//         {
//             Node newNode = new Node(temp.data);
//             map.put(temp, newNode);
//             temp = temp.next;
//         }

//         temp = head;
//         while (temp != null) 
//         {
//             Node copyNode = map.get(temp);
//             copyNode.next = map.get(temp.next);
//             copyNode.random = map.get(temp.random);
//             temp = temp.next;
//         }

//         return map.get(head);
//     }
// }
