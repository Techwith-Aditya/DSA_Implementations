import java.util.Stack;

public class infixToPostfix {
    static int priority(char ch) {
        switch(ch) 
        {
            case '+':
            case '-':
                return 1;
            case '*':
            case '/':
                return 2;
            case '^':
                return 3;
            default:
                return -1;
        }
    }

    public static String convert(String infix) {
        Stack<Character> s=new Stack<>();
        String postfix = "";

        for(int i=0; i<infix.length(); i++) 
        {
            char ch=infix.charAt(i);

            if((ch>='A' && ch<='Z') || (ch>='a' && ch<='z') || (ch>='0' && ch<='9')) 
            {
                postfix = postfix + ch;
            } 
            else if(ch=='(') 
            {
                s.push(ch);
            } 
            else if(ch==')') 
            {
                while(!s.isEmpty() && s.peek()!='(') 
                {
                    postfix = postfix + s.pop();
                }
                s.pop();
            } 
            else 
            {
                while(!s.isEmpty() && priority(s.peek())>=priority(ch)) 
                {
                    postfix = postfix + s.pop();
                }
                s.push(ch);
            }
        }

        while(!s.isEmpty()) 
        {
            postfix = postfix + s.pop();
        }

        return postfix;
    }

    public static void main(String[] args) {
        String infix = "A+B*(C^D-E)";
        System.out.println("Postfix: " + convert(infix));
    }
}
